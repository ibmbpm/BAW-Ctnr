
###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2020. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4adeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 20.0.2
spec:

  #################################################################################################################
  ##  The contents of this template CR file reflect only the specific parameters and configuration 
  ##  settings applicable to the represented ICP4A capability. 
  ##   
  ##  These values/configuration sections are to be used when manually assembling or updating the main 
  ##  ICP4A CR that is being applied in order to install an ICP4A environment. 
  ##  
  ##  If you are in the process of preparing a new install of an ICP4A environment, 
  ##  you should merge the required values and configuration sections from this file into the   
  ##  starting point CR template: ibm_cp4a_cr_enterprise_foundation.yaml available in the
  ##  same location as this template. 
  ##  
  ##  If you updating an existing ICP4A environment, you should merge the required values and configuration
  ##  sections from this template in the main ICP4A CR file already applied in the environment.  
  ##  
  ######################################################################################################################
  
  shared_configuration:

    ## CP4A patterns or capabilities to be deployed. This CR represents Operational Decsision Manage "decisions" pattern
    ## that brings Decision Center, Rule Execution Server and Decision Runtime, based on the user specification in the 
    ## sc_optional_components specification
    sc_deployment_patterns: decisions

    ## The optional components to be installed if listed here.
    ## This is normally populated by the deploy script based on input from the user.
    ## User can also manually specify the optional components to be deployed here.
    ## This pattern has has 3: decisionCenter, decisionRunner, and decisionServerRuntime components, where 
    ## decisionRuntim represent the Rule Execution Server. 
    ## If decisionCenter is set, you also have to set the 'odm_configuration.decisionCenter.enabled' flag to true to install it.
    ## If decisionRunner is set, you also have to set the 'odm_configuration.decisionRunner.enabled' flag to true to install it.
    ## If decisionServerRuntime is set, you also have to set the 'odm_configuration.decisionRuntime.enabled' flag to true to install it.
    sc_optional_components:

  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    dc_odm_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "oracle".
      dc_database_type: "db2"
      ## Provide the database server name or IP address of the database server.
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      dc_common_database_port: "<Required>"
      ## Provide the name of the database for ODM.  For example: "ODMDB"
      dc_common_database_name: "<Required>"
      ## The name of the secret that contains the credentials to connect to the database.
      dc_common_database_instance_secret: "<Required>"


  ########################################################################
  ########     IBM Operational Decision Manager Configuration     ########
  ########################################################################
  odm_configuration:
    # Allow to activate more trace for ODM in the Operator pod.
    debug: false
    # Allow to specify which version of ODM you want to deploy.
    # Supported version > 19.0.2
    # If omitted the latest version will be used.
    version: 20.0.2
    image:
      # Specify the repository used to retrieve the Docker images if you do not want to use the default one.
      repository: "cp.icr.io/cp/cp4a/odm"
      # Specify the tag for the Docker images.
      # It's a Mandatory tag when you enable odm_configuraton.
      tag: 8.10.4.0
      # Specify the pull policy for the Docker images. See Kuberntes documentation for more inforations.
      # Possible values : IfNotPresent, Always, Never
      pullPolicy: IfNotPresent
      # Optionally specify an array of imagePullSecrets.
      # Secrets must be manually created in the namespace.
      # Ex: pullSecrets: "mypullsecret"
      pullSecrets:

    service:
      # Specify whether to enable Transport Layer Security. If true, ODM web apps are accessed through HTTPS. If false, they are accessed through HTTP.
      enableTLS: true
      # Specify the service type.
      type: NodePort

    ## Decision Server Runtime parameters
    decisionServerRuntime:
      # Specify whether to enable Decision Server Runtime.
      enabled: true
      # Specify the number of Decision Server Runtime pods.
      replicaCount: 1
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      # Specify the name of the configmap that contains the XU configuration property file.
      xuConfigRef:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi

    ## Decision Server Console parameters
    decisionServerConsole:
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 1024Mi

    ## Decision Center parameters
    decisionCenter:
      # Specify whether to enable Decision Center.
      enabled: true
      # Specify the persistence locale for Decision Center.
      # Possible values  "ar_EG" (Arabic - Egypt), "zh_CN" (Chinese - China), "zh_TW" (Chinese - Taiwan)
      # "nl_NL" (Netherlands), "en_GB" (English - United Kingdom), "en_US" (English - United States),
      # "fr_FR" (French - France), "de_DE" (German - Germany), "iw_IL" (Hebrew - Israel), "it_IT" (Italian - Italy),
      # "ja_JP" (Japanese - Japan) , "ko_KR" (Korean - Korea), "pl_PL" (Polish - Poland),
      # "pt_BR" (Portuguese - Brazil), "ru_RU" (Russian - Russia), "es_ES" (Spanish - Spain)
      persistenceLocale: en_US
      # Specify the number of Decision Center pods.
      replicaCount: 1
      # Persistent Volume Claim to access the custom libraries
      customlibPvc:
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 1500Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi

    ## Decision Runner parameters
    decisionRunner:
      # Specify whether to enable Decision Runner.
      enabled: true
      # Specify the number of Decision Runner pods.
      replicaCount: 1
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi

    ## Database - Option 3: External (Oracle)
    ## Fill in the parameters to use an external database configured by a secret.
    externalCustomDatabase:
      # Specify the name of the secret that contains the datasource configuration to use.
      datasourceRef:
      # Persistent Volume Claim to access the JDBC Database Driver
      driverPvc:

    readinessProbe:
      # Specify the number of seconds after the container has started before readiness probe is initiated.
      initialDelaySeconds: 5
      # Specify how often (in seconds) to perform the probe.
      periodSeconds: 5
      # Specify how many times Kubernetes will try before giving up when a pod starts and the probe fails. Giving up means marking the pod as Unready.
      failureThreshold: 45
      # Specify the number of seconds after which the readiness probe times out.
      timeoutSeconds: 5

    livenessProbe:
      # Specify the number of seconds after the container has started before liveness probe is initiated.
      initialDelaySeconds: 300
      # Specify how often (in seconds) to perform the probe.
      periodSeconds: 10
      # Specify how many times Kubernetes will try before giving up when a pod starts and the probe fails. Giving up means restarting the pod.
      failureThreshold: 10
      # Specify the number of seconds after which the liveness probe times out.
      timeoutSeconds: 5

    customization:
      # Specify the name of the secret that contains the TLS certificate you want to use. If the parameter is left empty, a default certificate is used.
      securitySecretRef:
      # Specify the name of the secret that contains the configuration files required to use the IBM Business Automation Insights emitter.
      baiEmitterSecretRef:
      # Specify the label attached to some nodes. Pods are scheduled to the nodes with this label. If the parameter is empty, pods are scheduled randomly.
      authSecretRef:

    oidc:
      # Specify whether to enable OpenId Authentication.
      enabled: false
      # Specify the OIDC Allowed Domains
      allowedDomains:

    networkPolicy:
      # Enable creation of NetworkPolicy resources.
      enabled: true
      # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
      # For Kubernetes v1.7, use 'networking.k8s.io/v1'
      apiVersion: networking.k8s.io/v1
